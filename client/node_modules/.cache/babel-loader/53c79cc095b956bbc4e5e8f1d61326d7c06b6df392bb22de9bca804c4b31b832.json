{"ast":null,"code":"var _jsxFileName = \"/Users/s2200193/Desktop/Work/work with bhai/voting-app/react/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Option from \"./components/Option\";\nimport OptionForm from \"./components/OptionForm\";\nimport Feedback from \"./components/Feedback\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [options, setOptions] = useState([]);\n  const handleCreateOptions = numberOfOptions => {\n    const newOptions = [];\n    for (let i = 0; i < numberOfOptions; i++) {\n      const name = window.prompt(`Enter name for option ${i + 1}:`);\n      newOptions.push({\n        id: i + 1,\n        name,\n        votes: 0\n      });\n    }\n    setOptions(newOptions);\n  };\n  const handleVote = id => {\n    setOptions(options.map(option => option.id === id ? {\n      ...option,\n      votes: option.votes + 1\n    } : option));\n  };\n  const handleRefresh = () => {\n    if (window.confirm(\"Are you sure you want to refresh the votes?\")) {\n      setOptions(options.map(option => ({\n        ...option,\n        votes: 0\n      })));\n    }\n  };\n  const handleClearOptions = () => {\n    if (window.confirm(\"Are you sure you want to clear all options?\")) {\n      setOptions([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container App\",\n    children: /*#__PURE__*/_jsxDEV(Feedback, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9ogac3AmpSYCC4Ymf73ibY+Q42M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Option","OptionForm","Feedback","jsxDEV","_jsxDEV","App","_s","options","setOptions","handleCreateOptions","numberOfOptions","newOptions","i","name","window","prompt","push","id","votes","handleVote","map","option","handleRefresh","confirm","handleClearOptions","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/s2200193/Desktop/Work/work with bhai/voting-app/react/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Option from \"./components/Option\";\nimport OptionForm from \"./components/OptionForm\";\nimport Feedback from \"./components/Feedback\"\n\nfunction App() {\n  const [options, setOptions] = useState([]);\n\n  const handleCreateOptions = (numberOfOptions) => {\n    const newOptions = [];\n    for (let i = 0; i < numberOfOptions; i++) {\n      const name = window.prompt(`Enter name for option ${i + 1}:`);\n      newOptions.push({ id: i + 1, name, votes: 0 });\n    }\n    setOptions(newOptions);\n  };\n\n  const handleVote = (id) => {\n    setOptions(\n      options.map((option) =>\n        option.id === id ? { ...option, votes: option.votes + 1 } : option\n      )\n    );\n  };\n\n  const handleRefresh = () => {\n    if (window.confirm(\"Are you sure you want to refresh the votes?\")) {\n      setOptions(options.map((option) => ({ ...option, votes: 0 })));\n    }\n  };\n\n  const handleClearOptions = () => {\n    if (window.confirm(\"Are you sure you want to clear all options?\")) {\n      setOptions([]);\n    }\n  };\n\n  return (\n    <div className=\"container App\">\n          <Feedback/>\n      {/* <h1>Cast Your Vote</h1>\n      {options.length === 0 && (\n        <OptionForm handleCreateOption={handleCreateOptions} />\n      )}\n      {options.length > 0 && (\n        <div>\n          <div className=\"options\">\n            {options.map((option) => (\n              <Option\n                key={option.id}\n                id={option.id}\n                name={option.name}\n                votes={option.votes}\n                handleVote={handleVote}\n              />\n            ))}\n          </div>\n          <div className=\"votes\">\n            <table>\n              <thead>\n                <tr>\n                  <th>Option</th>\n                  <th>Votes</th>\n                </tr>\n              </thead>\n              <tbody>\n                {options.map((option) => (\n                  <tr key={option.id}>\n                    <td>{option.name}</td>\n                    <td>{option.votes}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n            <button onClick={handleRefresh}>Refresh Vote Count</button>\n            <button onClick={handleClearOptions}>Recreate Options</button>\n          </div>\n        </div>\n      )} */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,QAAQ,MAAM,uBAAuB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,mBAAmB,GAAIC,eAAe,IAAK;IAC/C,MAAMC,UAAU,GAAG,EAAE;IACrB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,eAAe,EAAEE,CAAC,EAAE,EAAE;MACxC,MAAMC,IAAI,GAAGC,MAAM,CAACC,MAAM,CAAE,yBAAwBH,CAAC,GAAG,CAAE,GAAE,CAAC;MAC7DD,UAAU,CAACK,IAAI,CAAC;QAAEC,EAAE,EAAEL,CAAC,GAAG,CAAC;QAAEC,IAAI;QAAEK,KAAK,EAAE;MAAE,CAAC,CAAC;IAChD;IACAV,UAAU,CAACG,UAAU,CAAC;EACxB,CAAC;EAED,MAAMQ,UAAU,GAAIF,EAAE,IAAK;IACzBT,UAAU,CACRD,OAAO,CAACa,GAAG,CAAEC,MAAM,IACjBA,MAAM,CAACJ,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGI,MAAM;MAAEH,KAAK,EAAEG,MAAM,CAACH,KAAK,GAAG;IAAE,CAAC,GAAGG,MAAM,CACnE,CACF;EACH,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIR,MAAM,CAACS,OAAO,CAAC,6CAA6C,CAAC,EAAE;MACjEf,UAAU,CAACD,OAAO,CAACa,GAAG,CAAEC,MAAM,KAAM;QAAE,GAAGA,MAAM;QAAEH,KAAK,EAAE;MAAE,CAAC,CAAC,CAAC,CAAC;IAChE;EACF,CAAC;EAED,MAAMM,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIV,MAAM,CAACS,OAAO,CAAC,6CAA6C,CAAC,EAAE;MACjEf,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKqB,SAAS,EAAC,eAAe;IAAAC,QAAA,eACxBtB,OAAA,CAACF,QAAQ;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAwCX;AAEV;AAACxB,EAAA,CA5EQD,GAAG;AAAA0B,EAAA,GAAH1B,GAAG;AA8EZ,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}